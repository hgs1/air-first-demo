{"version":3,"sources":["singleComponent/index.js","doubleComponent/InputComp.js","doubleComponent/OutputComp.js","doubleComponent/index.js","App.js","index.js"],"names":["initCount","React","useState","count","setCount","num","setNum","useEffect","setInterval","className","type","value","onChange","e","target","onClick","parseInt","InputComp","OutputComp","App","setInitCount","class","to","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAGe,cAAwB,IAAD,IAApBA,iBAAoB,MAAR,EAAQ,IACRC,IAAMC,SAASF,GADP,mBAC5BG,EAD4B,KACrBC,EADqB,OAEZH,IAAMC,SAAS,IAFH,mBAE5BG,EAF4B,KAEvBC,EAFuB,KAUpC,OANAL,IAAMM,WAAU,WACdC,aAAY,WACVJ,GAAS,SAAAD,GAAK,OAAIA,EAAQ,OACzB,OACF,IAGD,6BACE,wDACA,uBAAGM,UAAU,SAAb,qBAEE,kBAAC,IAAD,CAAOC,KAAK,SAASD,UAAU,aAAaE,MAAON,EAAKO,SAAU,SAAAC,GAAC,OAAIP,EAAOO,EAAEC,OAAOH,UACvF,kBAAC,IAAD,CAAQF,UAAU,aAAaM,QAAS,kBAAMX,EAASD,EAAQa,SAASX,MAAxE,gBACA,kBAAC,IAAD,CAAQU,QAAS,kBAAMX,EAASD,EAAQa,SAASX,MAAjD,iBAEF,uBAAGI,UAAU,UAAb,qBAA0BN,KCnBjB,cAA0B,IAAvBA,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EACdH,IAAMC,SAAS,IADD,mBAC9BG,EAD8B,KACzBC,EADyB,KAGtC,OACE,6BACE,uBAAGG,UAAU,SAAb,qBAEE,kBAAC,IAAD,CAAOC,KAAK,SAASD,UAAU,aAAaE,MAAON,EAAKO,SAAU,SAAAC,GAAC,OAAIP,EAAOO,EAAEC,OAAOH,UACvF,kBAAC,IAAD,CAAQF,UAAU,aAAaM,QAAS,kBAAMX,EAASD,EAAQa,SAASX,MAAxE,gBACA,kBAAC,IAAD,CAAQU,QAAS,kBAAMX,EAASD,EAAQa,SAASX,MAAjD,mBCVO,cAA0B,IAAvBF,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAQvB,OANAH,IAAMM,WAAU,WACdC,aAAY,WACVJ,GAAS,SAAAD,GAAK,OAAIA,EAAQ,OACzB,OACF,CAACC,IAGF,6BACE,uBAAGK,UAAU,UAAb,qBAA0BN,KCRjB,cAAwB,IAAD,IAApBH,iBAAoB,MAAR,EAAQ,IACNC,IAAMC,SAASF,GADT,mBAC1BG,EAD0B,KACnBC,EADmB,KAElC,OACI,6BACI,wDACA,kBAACa,EAAD,CAAWd,MAAQA,EAAQC,SAAWA,IACtC,kBAACc,EAAD,CAAYf,MAAQA,EAAQC,SAAWA,MC6BpCe,MAjCf,WAAgB,IAAD,EACuBlB,IAAMC,SAAS,IADtC,mBACLF,EADK,KACMoB,EADN,KAEb,OACE,kBAAC,IAAD,KACE,6BACE,8DACA,uBAAGC,MAAM,QAAT,2BAEE,kBAAC,IAAD,CAAOX,KAAK,SAASC,MAAQX,EAAYY,SAAW,SAAAC,GAAC,OAAIO,EAAaP,EAAEC,OAAOH,YAGnF,6BACE,wDACA,6BACE,4BACE,4BACE,kBAAC,IAAD,CAAMW,GAAG,oBAAT,6BAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,oBAAT,6BAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,mBAKR,kBAAC,IAAD,CAAOC,KAAK,mBAAmBC,UAAW,kBAAM,kBAAC,EAAD,CAAiBxB,UAAYgB,SAAShB,IAAc,OACpG,kBAAC,IAAD,CAAOuB,KAAK,mBAAmBC,UAAW,kBAAM,kBAAC,EAAD,CAAiBxB,UAAYgB,SAAShB,IAAc,SC1B1GyB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.8d0d99ba.chunk.js","sourcesContent":["import React from 'react';\nimport { Input, Button } from 'antd';\n\nexport default ({ initCount = 0 }) => {\n  const [ count, setCount ] = React.useState(initCount);\n  const [ num, setNum ] = React.useState('');\n\n  React.useEffect(() => {\n    setInterval(() => {\n      setCount(count => count + 1)\n    }, 1000)\n  }, [])\n\n  return (\n    <div>\n      <h1>单组件版</h1>\n      <p className=\"input\">\n        输入：\n        <Input type=\"number\" className=\"margin-r10\" value={num} onChange={e => setNum(e.target.value)} />\n        <Button className=\"margin-r10\" onClick={() => setCount(count + parseInt(num))}>增加</Button>\n        <Button onClick={() => setCount(count - parseInt(num))}>减少</Button>\n      </p>\n      <p className=\"output\">输出：{count}</p>\n    </div>\n  )\n}\n","import React from 'react';\nimport { Input, Button } from 'antd';\n\nexport default ({ count, setCount }) => {\n  const [ num, setNum ] = React.useState('');\n\n  return (\n    <div>\n      <p className=\"input\">\n        输入：\n        <Input type=\"number\" className=\"margin-r10\" value={num} onChange={e => setNum(e.target.value)} />\n        <Button className=\"margin-r10\" onClick={() => setCount(count + parseInt(num))}>增加</Button>\n        <Button onClick={() => setCount(count - parseInt(num))}>减少</Button>\n      </p>\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default ({ count, setCount }) => {\n\n  React.useEffect(() => {\n    setInterval(() => {\n      setCount(count => count + 1)\n    }, 1000)\n  }, [setCount])\n\n  return (\n    <div>\n      <p className=\"output\">输出：{count}</p>\n    </div>\n  )\n}\n","import React from 'react';\nimport InputComp from './InputComp';\nimport OutputComp from './OutputComp';\n\nexport default ({ initCount = 0 }) => {\n    const [ count, setCount ] = React.useState(initCount);\n    return (\n        <div>\n            <h1>双组件版</h1>\n            <InputComp count={ count } setCount={ setCount } />\n            <OutputComp count={ count } setCount={ setCount } />\n        </div>\n    )\n}\n","import React from 'react';\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport SingleComponent from './singleComponent/index';\nimport DoubleComponent from './doubleComponent/index';\nimport { Input } from 'antd';\n\nfunction App() {\n  const [ initCount, setInitCount ] = React.useState('');\n  return (\n    <Router>\n      <div>\n        <h1>初始值设定</h1>\n        <p class=\"init\">\n          初始值：\n          <Input type=\"number\" value={ initCount } onChange={ e => setInitCount(e.target.value) } />\n        </p>\n      </div>\n      <div>\n        <h1>例子选择</h1>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/singleComponent\">单组件版</Link>\n            </li>\n            <li>\n              <Link to=\"/doubleComponent\">双组件版</Link>\n            </li>\n            <li>\n              <Link to=\"/users\">redux版</Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n      <Route path=\"/singleComponent\" component={() => <SingleComponent initCount={ parseInt(initCount) || 0 }/>} />\n      <Route path=\"/doubleComponent\" component={() => <DoubleComponent initCount={ parseInt(initCount) || 0 }/>} />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css'\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}